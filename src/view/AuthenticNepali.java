/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import java.awt.event.ActionListener;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.AuthenticNepaliModel;
import controller.AuthenticNepaliController;
import database.DbConnection;
import java.sql.Connection;
import java.sql.Statement;


/**
 *
 * @author User
 */
public class AuthenticNepali extends javax.swing.JFrame {
    PreparedStatement pst = null;
    AuthenticNepaliModel model;
    Statement stmt = null;
    Connection conn = null;
    
     
    DefaultTableModel Model = null;

    

    /**
     * Creates new form AuthenticNepali
     */
    public AuthenticNepali() {
        initComponents();
        

        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Drinks = new javax.swing.JTable();
        Show = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        AuthenticNepalitbl = new javax.swing.JTable();
        btnDelete = new javax.swing.JButton();
        updatebtn = new javax.swing.JButton();
        savedatabtn = new javax.swing.JButton();
        price = new javax.swing.JTextField();
        Price = new javax.swing.JLabel();
        Quantity = new javax.swing.JLabel();
        quantity = new javax.swing.JTextField();
        itemName = new javax.swing.JTextField();
        ItemName = new javax.swing.JLabel();
        itemno = new javax.swing.JLabel();
        itemNo = new javax.swing.JTextField();
        showbtn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(131, 197, 190));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        Drinks.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        Drinks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item No.", "Item Name", "Quantity", "Price"
            }
        ));
        Drinks.setColumnSelectionAllowed(true);
        Drinks.setGridColor(new java.awt.Color(216, 246, 210));
        Drinks.setOpaque(false);
        jScrollPane3.setViewportView(Drinks);

        Show.setText("Show Data");
        Show.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(131, 197, 190));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Authentic Nepali Stocks", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BELOW_TOP, new java.awt.Font("Times New Roman", 3, 24))); // NOI18N

        AuthenticNepalitbl.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        AuthenticNepalitbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item No.", "Item Name", "Quantity", "Price"
            }
        ));
        AuthenticNepalitbl.setColumnSelectionAllowed(true);
        AuthenticNepalitbl.setGridColor(new java.awt.Color(216, 246, 210));
        AuthenticNepalitbl.setOpaque(false);
        jScrollPane4.setViewportView(AuthenticNepalitbl);

        btnDelete.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.setContentAreaFilled(false);
        btnDelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        updatebtn.setBackground(new java.awt.Color(16, 101, 82));
        updatebtn.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        updatebtn.setText("Update");
        updatebtn.setContentAreaFilled(false);
        updatebtn.setDefaultCapable(false);
        updatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebtnActionPerformed(evt);
            }
        });

        savedatabtn.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        savedatabtn.setText("Save Data");
        savedatabtn.setBorderPainted(false);
        savedatabtn.setContentAreaFilled(false);
        savedatabtn.setCursor(new java.awt.Cursor(java.awt.Cursor.MOVE_CURSOR));
        savedatabtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savedatabtnActionPerformed(evt);
            }
        });

        price.setBackground(new java.awt.Color(131, 197, 190));
        price.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        price.setAutoscrolls(false);
        price.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        price.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceActionPerformed(evt);
            }
        });

        Price.setBackground(new java.awt.Color(131, 197, 190));
        Price.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        Price.setText("Price");

        Quantity.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        Quantity.setText("Quantity");

        quantity.setBackground(new java.awt.Color(131, 197, 190));
        quantity.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        quantity.setAutoscrolls(false);
        quantity.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        quantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityActionPerformed(evt);
            }
        });

        itemName.setBackground(new java.awt.Color(131, 197, 190));
        itemName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        itemName.setAutoscrolls(false);
        itemName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        itemName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemNameActionPerformed(evt);
            }
        });

        ItemName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        ItemName.setText("Item Name");

        itemno.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        itemno.setText("Item No.");

        itemNo.setBackground(new java.awt.Color(131, 197, 190));
        itemNo.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        itemNo.setAutoscrolls(false);
        itemNo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        itemNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemNoActionPerformed(evt);
            }
        });

        showbtn.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        showbtn.setText("Show Stocks");
        showbtn.setBorderPainted(false);
        showbtn.setContentAreaFilled(false);
        showbtn.setCursor(new java.awt.Cursor(java.awt.Cursor.MOVE_CURSOR));
        showbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showbtnActionPerformed(evt);
            }
        });

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(itemno)
                                .addComponent(ItemName)
                                .addComponent(Quantity))
                            .addGap(47, 47, 47)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(itemName, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(itemNo, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addComponent(Price)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(savedatabtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updatebtn)
                        .addGap(23, 23, 23)
                        .addComponent(btnDelete)
                        .addGap(18, 18, 18)
                        .addComponent(showbtn)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(26, 26, 26)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(itemNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(itemno))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(itemName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ItemName))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Quantity))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Price)
                            .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(updatebtn)
                            .addComponent(savedatabtn)
                            .addComponent(showbtn)
                            .addComponent(btnDelete))))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
        public void myreset(){
        itemNo.setText("");
        itemName.setText("");
        quantity.setText("");
        price.setText("");
    }
    
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
       DefaultTableModel Model = (DefaultTableModel) AuthenticNepalitbl.getModel();

        if (AuthenticNepalitbl.getSelectedRowCount() == 1) {
            int selectedRow = AuthenticNepalitbl.getSelectedRow();
            String itemNoToDelete = AuthenticNepalitbl.getValueAt(selectedRow, 0).toString(); // Assuming itemNo is in the first column

            Model.removeRow(selectedRow);

            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/project", "root", "asdfgzxcv123");
                Statement stmt = conn.createStatement();

                String sql = "DELETE FROM authenticnepali WHERE itemNo = '" + itemNoToDelete + "'";
                stmt.executeUpdate(sql);

                JOptionPane.showMessageDialog(this, "Data Deleted", "Authentic Nepali", JOptionPane.INFORMATION_MESSAGE);
                myreset();
            } catch (Exception e) {
                System.out.println(e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a single row for deletion", "Error", JOptionPane.ERROR_MESSAGE);
        }

        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void updatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel Model = (DefaultTableModel) AuthenticNepalitbl.getModel();
        int selectedRow = AuthenticNepalitbl.getSelectedRow();
        
        if (selectedRow == -1) {
            if (AuthenticNepalitbl.getRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "Stock is empty!!");
            } else {
                JOptionPane.showMessageDialog(this, "Please select a row to update!!");
            }
        } else {
            String itemNoValue = itemNo.getText();
            String itemNameValue = itemName.getText();
            String quantityValue = quantity.getText();
            String priceValue = price.getText();

            Model.setValueAt(itemNoValue, selectedRow, 0);
            Model.setValueAt(itemNameValue, selectedRow, 1);
            Model.setValueAt(quantityValue, selectedRow, 2);
            Model.setValueAt(priceValue, selectedRow, 3);
            
            
            

            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/project", "root", "asdfgzxcv123");

                String sql = "UPDATE authenticnepali SET ItemNo=?, ItemName=?, Quantity=?, Price=? WHERE ItemNo=?";
                PreparedStatement pst = conn.prepareStatement(sql);
                pst.setString(1, itemNoValue);
                pst.setString(2, itemNameValue);
                pst.setString(3, quantityValue);
                pst.setString(4, priceValue);
                pst.setString(5, itemNoValue); // Assuming 'ItemNo' is the primary key column

                pst.executeUpdate();
                pst.close();
                conn.close();

                JOptionPane.showMessageDialog(this, "Update Successful!!");
            } catch (Exception e) {
                e.printStackTrace();
            }
        }


    }//GEN-LAST:event_updatebtnActionPerformed

    private void savedatabtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savedatabtnActionPerformed
        // TODO add your handling code here:
        if (itemNo.getText().equals("") || itemName.getText().equals("") || quantity.getText().equals("") || price.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Please enter all stocks");
        } else {
            String data[] = { itemNo.getText(), itemName.getText(), quantity.getText(), price.getText() };
            DefaultTableModel Model = (DefaultTableModel) AuthenticNepalitbl.getModel();
            Model.addRow(data);
            JOptionPane.showMessageDialog(this, "Stock added successfully!!");
        }
        if (AuthenticNepalitbl.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Stock is Empty");
        } else {
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/project", "root", "asdfgzxcv123");

                String sql = "INSERT INTO authenticnepali (itemNo, itemName, quantity, price) VALUES (?, ?, ?, ?)";
                PreparedStatement pst = conn.prepareStatement(sql);

                for (int i = 0; i < AuthenticNepalitbl.getRowCount(); i++) {
                    String itemNoValue = AuthenticNepalitbl.getValueAt(i, 0).toString();
                    String itemNameValue = AuthenticNepalitbl.getValueAt(i, 1).toString();
                    String quantityValue = AuthenticNepalitbl.getValueAt(i, 2).toString();
                    String priceValue = AuthenticNepalitbl.getValueAt(i, 3).toString();

                    pst.setString(1, itemNoValue);
                    pst.setString(2, itemNameValue);
                    pst.setString(3, quantityValue);
                    pst.setString(4, priceValue);

                    pst.executeUpdate();
                }

                pst.close();
                conn.close();

                JOptionPane.showMessageDialog(this, "Stocks inserted successfully!!");
                DefaultTableModel Model = (DefaultTableModel) AuthenticNepalitbl.getModel();
                Model.setRowCount(0); // Clear the table after successful insertion
            } catch (Exception e) {
                e.printStackTrace();
            }
        }


       
    }//GEN-LAST:event_savedatabtnActionPerformed

    private void priceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceActionPerformed

    private void quantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantityActionPerformed

    private void itemNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemNameActionPerformed

    private void itemNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemNoActionPerformed

    private void ShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowActionPerformed
        
    }//GEN-LAST:event_ShowActionPerformed

    private void showbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showbtnActionPerformed
        // TODO add your handling code here:
                setAuthenticNepaliStock();
    }
    
    public void setAuthenticNepaliStock(){
        
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/project","root","asdfgzxcv123");
            PreparedStatement pst = con.prepareStatement("select * from authenticnepali");
            ResultSet rs = pst.executeQuery();
            
            while(rs.next()){
                String itemNo = rs.getString("itemNo");
                String itemName = rs.getString("itemName");
                String price = rs.getString("price");
                String quantity = rs.getString("Quantity");
                
                Object[] obj = {itemNo, itemName, quantity, price};
                
                Model = (DefaultTableModel)AuthenticNepalitbl.getModel();
                Model.addRow(obj);
            }
            
            
            
        }catch(Exception e){
            e.printStackTrace();
            
        }
        
    }//GEN-LAST:event_showbtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         setVisible(false);
        new Inventory().setVisible(true);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    
    public AuthenticNepaliModel getData(){
        model = new AuthenticNepaliModel(itemNo.getText(), itemName.getText(), quantity.getText(), price.getText());
        return model;

        }
        
        public void setMessage(String msg){
            JOptionPane.showMessageDialog(this, msg);
        }
    
        public void saveAuthenticNepaliListner(ActionListener Save){
        savedatabtn.addActionListener(Save);
        }
        
        public void deleteAuthenticNepaliListner(ActionListener Delete){
            btnDelete.addActionListener(Delete);
        }
        
        public void updateAuthenticNepaliListner(ActionListener Update){
            updatebtn.addActionListener(Update);
        }
        
        public void showAuthenticNepaliListner(ActionListener Show){
            showbtn.addActionListener(Show);
        }
        
        
        
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AuthenticNepali.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AuthenticNepali.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AuthenticNepali.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AuthenticNepali.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AuthenticNepali().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTable AuthenticNepalitbl;
    public javax.swing.JTable Drinks;
    private javax.swing.JLabel ItemName;
    private javax.swing.JLabel Price;
    private javax.swing.JLabel Quantity;
    private javax.swing.JButton Show;
    private javax.swing.JButton btnDelete;
    private javax.swing.JTextField itemName;
    private javax.swing.JTextField itemNo;
    private javax.swing.JLabel itemno;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField price;
    private javax.swing.JTextField quantity;
    private javax.swing.JButton savedatabtn;
    private javax.swing.JButton showbtn;
    private javax.swing.JButton updatebtn;
    // End of variables declaration//GEN-END:variables

}